[{"G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\redux\\state.ts":"1","G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\redux\\currencyReducer.ts":"2","G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\App.tsx":"3","G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"4","G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\index.tsx":"5","G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"6","G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\redux\\actions.ts":"7","G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\lessons\\lesson2\\lesson2.ts":"8","G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\lessons\\lesson1\\lesson1.tsx":"9"},{"size":287,"mtime":1626019640414,"results":"10","hashOfConfig":"11"},{"size":1717,"mtime":1625590489397,"results":"12","hashOfConfig":"11"},{"size":545,"mtime":1626445910474,"results":"13","hashOfConfig":"11"},{"size":3654,"mtime":1626432516784,"results":"14","hashOfConfig":"11"},{"size":319,"mtime":1625224581093,"results":"15","hashOfConfig":"11"},{"size":3877,"mtime":1625590137949,"results":"16","hashOfConfig":"11"},{"size":1604,"mtime":1625759919789,"results":"17","hashOfConfig":"11"},{"size":4971,"mtime":1626453979481,"results":"18","hashOfConfig":"11"},{"size":860,"mtime":1625224581198,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"rjkvwz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\redux\\state.ts",[],["41","42"],"G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\redux\\currencyReducer.ts",[],"G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\App.tsx",["43"],"G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",["44"],"G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\index.tsx",[],["45","46"],"G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\redux\\actions.ts",[],"G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\lessons\\lesson2\\lesson2.ts",["47","48","49","50","51"],"console.log('lesson 2');\r\n\r\nconst globalScope = {\r\n\r\n}\r\n// Lexical environment\r\n// http://jsflow.org/docs/lex-env/\r\n\r\n//// Closure\r\n// https://learn.javascript.ru/closure\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Closures\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-%D0%B7%D0%B0%D0%BC%D1%8B%D0%BA%D0%B0%D0%BD%D0%B8%D1%8F-%D0%B2-javascript-%D1%80%D0%B0%D0%B7-%D0%B8-%D0%BD%D0%B0%D0%B2%D1%81%D0%B5%D0%B3%D0%B4%D0%B0-c211805b6898\r\n// https://www.youtube.com/watch?v=pahO5XjnfLA\r\n\r\n//// Сurrying\r\n// https://learn.javascript.ru/currying-partials\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-%D0%BA%D0%B0%D1%80%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B2-javascript-5ec4a1d88827\r\n\r\n// Pattern Module\r\n// https://habr.com/ru/company/ruvds/blog/419997/\r\n\r\n// Recursion\r\n// https://learn.javascript.ru/recursion\r\n// https://www.youtube.com/watch?v=Kuq6oIN3PH0\r\n\r\n\r\n\r\n// создают область видимости function/class  switch loop try/catch anonimus code if/else\r\n\r\n\r\n// Task 01\r\n// Реализовать функцию sum которая суммирует 2 числа следующим образом sum(3)(6) === 9\r\n    function sum(a: number){\r\n        return function(b: number){\r\n            return a + b;\r\n        }\r\n    }\r\n\r\n\r\n// Task 02\r\n// Реализовать функцию makeCounter которая работает следующим образом:\r\n// const counter = makeCounter();\r\n// counter(); // 1\r\n// counter(); // 2\r\n// const counter2 = makeCounter();\r\n// counter2(); // 1\r\n// counter(); // 3\r\n\r\nconst makeCounter = () => {\r\n    let num = 0;\r\n    return function(){\r\n            return ++num;\r\n    }\r\n}\r\n\r\n\r\n\r\n// Task 03\r\n// Переписать функцию из Task 02 так, что бы она принимала число в качестве аргумента и это число было стартовым значением счетчика\r\n// и возвращала следующий объект методов:\r\n// increase: +1\r\n// decrease: -1\r\n// reset: установить счетчик в 0;\r\n// set: установить счетчик в заданное значение;\r\n\r\nfunction Task3(){\r\n        let count: number =0;\r\n        return {\r\n            increase: () => ++count,\r\n            decrease: () => --count,\r\n            reset: () => count = 0,\r\n            set: (num: number) => {\r\n                count = num;\r\n                return num;\r\n            },\r\n            getCount: () => console.log(count),\r\n        }\r\n}\r\n\r\n// Напишите функцию sumTo(n), которая вычисляет сумму чисел 1 + 2 + ... + n.\r\n\r\n// function sumTo(a: number){\r\n//         let result = 0;\r\n//         for(let i = 1; i<=a; i++){\r\n//             result += i;\r\n//         }\r\n//         return result;\r\n// }\r\n\r\nfunction sumTo(a: number): number {\r\n        if(a === 1) return a;\r\n        return a + sumTo(a - 1);\r\n}\r\n// 3 + sumTo(2) => 2 + sumTo(1)=>1\r\nconsole.log(sumTo(3)); //6\r\n\r\n\r\n\r\n\r\n\r\n// Task 04*\r\n// Реализовать функцию superSum которая принимает число в качестве аргумента, которое указывает на количество слагаемых\r\n// и что бы корректно работали следующие вызовы:\r\n// 1) superSum(0) //0\r\n// 2) superSum(3)(2)(5)(3) //10\r\n// 3) superSum(3)(2)(5,3) //10\r\n// 4) superSum(3)(2,5,3) //10\r\n// 5) superSum(3)(2,5)(3) //10\r\n// 6) superSum(3)(2,5)(3,9) //10\r\n\r\n\r\nconst superSum = (arg:  number) => {\r\n    let _arguments: number[] = [];\r\n\r\n    let functionScope = {\r\n        outerScope: globalScope,\r\n        arg: 3,\r\n        _arguments: [2,2,1],\r\n        helper: 'Function-ссылка на саму себя получается?'\r\n    }\r\n\r\n    if(arg<0) return 0;\r\n    if(arg ===1) return (a: number) => a;\r\n\r\n\r\n\r\n    function helper(...rest: number[]){\r\n            debugger;\r\n        let helperFunctionScope = {\r\n            outerScope: functionScope,\r\n            rest: undefined\r\n        }\r\n        _arguments = [..._arguments, ...rest];\r\n        if(_arguments.length === arg) {\r\n            _arguments.length = arg;\r\n           return _arguments.reduce((acc,b) => acc + b, 0)\r\n        }\r\n        else {\r\n            return helper;\r\n        }\r\n    }\r\n    return helper;\r\n}\r\n// P.S. типизируйте только аргументы, а при вызове функции используйте @ts-ignore\r\n//@ts-ignore\r\nconsole.log(superSum(3)(2)(2)(1))\r\n\r\n\r\n\r\n// Task 05\r\n// решить все задачи по рекурсии которые даны в конце статьи https://learn.javascript.ru/recursion\r\n\r\n// Task 06\r\n// написать функцию, которая повторяет функционал метода flat массива на всю глубину.\r\n\r\n// just a plug\r\nexport default () => {};","G:\\Теория JS\\Среда IT-инкубатор\\JS Lessons\\src\\lessons\\lesson1\\lesson1.tsx",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":15},{"ruleId":"56","severity":1,"message":"60","line":3,"column":9,"nodeType":"58","messageId":"59","endLine":3,"endColumn":22},{"ruleId":"52","replacedBy":"61"},{"ruleId":"54","replacedBy":"62"},{"ruleId":"56","severity":1,"message":"63","line":33,"column":14,"nodeType":"58","messageId":"59","endLine":33,"endColumn":17},{"ruleId":"56","severity":1,"message":"64","line":49,"column":7,"nodeType":"58","messageId":"59","endLine":49,"endColumn":18},{"ruleId":"56","severity":1,"message":"65","line":66,"column":10,"nodeType":"58","messageId":"59","endLine":66,"endColumn":15},{"ruleId":"56","severity":1,"message":"66","line":129,"column":13,"nodeType":"58","messageId":"59","endLine":129,"endColumn":32},{"ruleId":"67","severity":1,"message":"68","line":157,"column":1,"nodeType":"69","endLine":157,"endColumn":25},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"@typescript-eslint/no-unused-vars","'Lesson4' is defined but never used.","Identifier","unusedVar","'CurrencyState' is defined but never used.",["70"],["71"],"'sum' is defined but never used.","'makeCounter' is assigned a value but never used.","'Task3' is defined but never used.","'helperFunctionScope' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]